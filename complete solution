#1.  Provide the list of markets in which customer  "Atliq  Exclusive"  operates its business in the  APAC  region.
  
  				SELECT market FROM gdb0041.dim_customer
  				where customer = "Atliq Exclusive" AND region="APAC"

#2.  What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, 
#unique_products_2020 ,unique_products_2021,percentage_chg


					SELECT 
					count(Distinct (CASE when fiscal_year = 2020 then p.product_code END)) as unique_product2020,
					count(Distinct(CASE when fiscal_year = 2021 then p.product_code END)) as unique_product2021,
					ROUND((count(Distinct(CASE when fiscal_year = 2021 then p.product_code END))-
					count(Distinct (CASE when fiscal_year = 2020 then p.product_code END)))*100/
					count(Distinct (CASE when fiscal_year = 2020 then p.product_code END)),2) as percentage_chg

					 FROM gdb0041.dim_product p 
					Join fact_sales_monthly s 
					ON p.product_code=s.product_code
					where fiscal_year IN(2020,2021)
                    
                    
                    
#3.  Provide a report with all the unique product counts for each  segment  and sort them in descending order of product counts. 
#The final output contains 2 fields, segment & product_count


  		SELECT segment ,count(product_code) as product_count  FROM gdb0041.dim_product
  		group by segment
  		order by count(product_code) DESC

        
#4 Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, 
#segment ,product_count_2020 ,product_count_2021 ,difference

      
            SELECT segment,
            COUNT(distinct( case when fiscal_year= 2021 then p.product_code end )) as product_count_2021,
            COUNT(distinct( case when fiscal_year= 2020 then p.product_code end )) as product_count_2020,
            (COUNT(distinct( case when fiscal_year= 2021 then p.product_code end ))-
            COUNT(distinct( case when fiscal_year= 2020 then p.product_code end ))) as diffrence
      
            FROM gdb0041.dim_product p 
            JOIN fact_sales_monthly s 
            ON p.product_code=s.product_code
            where fiscal_year IN(2020,2021)
            group by segment
                  order by diffrence DESC


#5.  Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, 
# product_code ,product ,manufacturing_cost


      			(SELECT p.product_code,p.product,(m.manufacturing_cost)
      			 FROM gdb0041.dim_product p 
      			join fact_manufacturing_cost m 
      			ON p.product_code = m.product_code
      
      			order by manufacturing_cost desc
      			limit 1)
      			UNION ALL
      			((SELECT p.product_code,p.product,(m.manufacturing_cost)
      			 FROM gdb0041.dim_product p 
      			join fact_manufacturing_cost m 
      			ON p.product_code = m.product_code
      
      			order by manufacturing_cost asc
      			limit 1)
      			)


#6.  Generate a report which contains the top 5 customers who received an average high  pre_invoice_discount_pct  for the
#fiscal  year 2021  and in the Indian  market. The final output contains these fields,- customer_code ,customer,average_discount_percentage


    				SELECT c.customer_code,customer,ROUND((pre_invoice_discount_pct),2) as average_discount_percentage FROM gdb0041.dim_customer c
    				join fact_pre_invoice_deductions pd
    				on c.customer_code=pd.customer_code
    				where fiscal_year=2021 and market="India"
    				group by customer_code
    				order by average_discount_percentage desc
    				limit 5


#7.Get the complete report of the Gross sales amount for the customer  “Atliq Exclusive”  for each month .This analysis helps
 #to  get an idea of low and high-performing months and take strategic decisions The final report contains these columns: 
#Month ,Year ,Gross sales Amount


        		 SELECT month(s.date) as month,year(s.date) as year,SUM(s.sold_quantity*g.gross_price)as Gross_sales_amount  FROM gdb0041.dim_customer c
        		JOIN fact_sales_monthly s 
        		ON c.customer_code=s.customer_code
        		JOIN fact_gross_price g
        		ON s.fiscal_year=g.fiscal_year
        		AND s.product_code=g.product_code
        		where customer = "Atliq Exclusive"
        		group by month,year
        		order by year,month

                
#8.In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by 
#the total_sold_quantity,Quarter ,total_sold_quantity
 
      		
      		SELECT 
      			CASE 
      				WHEN MONTH(date) IN (1,2,3)  THEN 'Q1'
      				WHEN MONTH(date) IN (4,5,6)  THEN 'Q2'
      				WHEN MONTH(date) IN (7,8,9)  THEN 'Q3'
      				WHEN MONTH(date) IN (10,11,12) THEN 'Q4'
      			END AS Quarter,
      			SUM(sold_quantity) AS total_sold_quantity
      		FROM gdb0041.fact_sales_monthly
      		WHERE fiscal_year = 2020
      		GROUP BY Quarter
      		ORDER BY total_sold_quantity DESC;


#9.Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?
# The final output  contains these fields, channel,gross_sales_mln ,percentage

      		with CTE_1 as (SELECT channel,sum(((sold_quantity*gross_price)/1000000))as gross_sales_mln FROM gdb0041.dim_customer c
      		JOIN fact_sales_monthly s 
      		ON c.customer_code=s.customer_code
      		JOIN fact_gross_price g
      		ON s.fiscal_year=g.fiscal_year AND s.product_code=g.product_code
      		where s.fiscal_year =2021
      		group by channel
      		)
      
      		select channel,gross_sales_mln,ROUND((gross_sales_mln*100)/sum(gross_sales_mln) over() ,2)as percentage from CTE_1
      		order by percentage desc

 
#10.Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021?
#The final output contains these fields, division ,product_code
    
    						WITH CTE_1 AS (
    							SELECT 
    								p.division,
    								s.product_code,
    								p.product,
    								SUM(s.sold_quantity) AS total_sold_quantity,
    								DENSE_RANK() OVER (
    									PARTITION BY p.division 
    									ORDER BY SUM(s.sold_quantity) DESC
    								) AS drank
    							FROM gdb0041.fact_sales_monthly s
    							JOIN dim_customer c 
    								ON s.customer_code = c.customer_code
    							JOIN dim_product p 
    								ON s.product_code = p.product_code
    							WHERE fiscal_year = 2021
    							GROUP BY p.division, s.product_code, p.product
    						)
    						SELECT *
    						FROM CTE_1
    						WHERE drank < 4;
